from mage_ai.settings.repo import get_repo_path
from mage_ai.io.config import ConfigFileLoader
from mage_ai.io.snowflake import Snowflake
from os import path
import os

if 'data_exporter' not in globals():
    from mage_ai.data_preparation.decorators import data_exporter

@data_exporter
def export_data_to_snowflake(data, **kwargs):
    """
    Exporta todas las tablas desde MySQL a Snowflake, creando la DB y el esquema si no existen.
    """
    config_path = os.path.join(get_repo_path(), 'snowflake.yaml')

# Cargar credenciales desde el archivo YAML
    with open(config_path, "r") as file:
        config = yaml.safe_load(file)

    # Extraer credenciales del YAML
    snowflake_config = config["default"]

    # Conectar a Snowflake
    conn = snowflake.connector.connect(
    user=snowflake_config["SNOWFLAKE_USER"],
    password=snowflake_config["SNOWFLAKE_PASSWORD"],
    account=snowflake_config["SNOWFLAKE_ACCOUNT"] )

    with Snowflake.with_config(ConfigFileLoader(config_path, config_profile)) as snowflake_loader:
        # Crear base de datos y esquema en Snowflake si no existen
        snowflake_loader.execute("CREATE DATABASE IF NOT EXISTS INSTACART_DB;")
        snowflake_loader.execute("CREATE SCHEMA IF NOT EXISTS INSTACART_DB.RAW;")

        for table, df in data.items():
            print(f"ðŸ”„ Exportando {table} a Snowflake...")

            # Exportar cada DataFrame a Snowflake
            snowflake_loader.export(
                df,
                database="INSTACART_DB",
                schema="RAW",
                table_name=table.upper(),  # Convertimos el nombre a mayÃºsculas para Snowflake
                if_exists="replace"  # Opciones: 'replace', 'append', 'fail'
            )

            print(f"Tabla {table} exportada.")

    print("ðŸš€ Â¡Todas las tablas fueron exportadas a Snowflake!")
